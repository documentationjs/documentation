
/*!
 * AnchorJS - v1.2.1 - 2015-07-02
 * https://github.com/bryanbraun/anchorjs
 * Copyright (c) 2015 Bryan Braun; Licensed MIT
 */

function AnchorJS(options) {
  'use strict';

  this.options = options || {};

  this._applyRemainingDefaultOptions = function(opts) {
    this.options.icon = this.options.hasOwnProperty('icon') ? opts.icon : '\ue9cb'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.
    this.options.visible = this.options.hasOwnProperty('visible') ? opts.visible : 'hover'; // Also accepts 'always'
    this.options.placement = this.options.hasOwnProperty('placement') ? opts.placement : 'right'; // Also accepts 'left'
    this.options.class = this.options.hasOwnProperty('class') ? opts.class : ''; // Accepts any class name.
  };

  this._applyRemainingDefaultOptions(options);

  this.add = function(selector) {
    var elements,
        elsWithIds,
        idList,
        elementID,
        i,
        roughText,
        tidyText,
        index,
        count,
        newTidyText,
        readableID,
        anchor;

    this._applyRemainingDefaultOptions(this.options);

    // Provide a sensible default selector, if none is given.
    if (!selector) {
      selector = 'h1, h2, h3, h4, h5, h6';
    } else if (typeof selector !== 'string') {
      throw new Error('The selector provided to AnchorJS was invalid.');
    }

    elements = document.querySelectorAll(selector);
    if (elements.length === 0) {
      return false;
    }

    this._addBaselineStyles();

    // We produce a list of existing IDs so we don't generate a duplicate.
    elsWithIds = document.querySelectorAll('[id]');
    idList = [].map.call(elsWithIds, function assign(el) {
      return el.id;
    });

    for (i = 0; i < elements.length; i++) {

      if (elements[i].hasAttribute('id')) {
        elementID = elements[i].getAttribute('id');
      } else {
        roughText = elements[i].textContent;

        // Refine it so it makes a good ID. Strip out non-safe characters, replace
        // spaces with hyphens, truncate to 32 characters, and make toLowerCase.
        //
        // Example string:                                // '⚡⚡⚡ Unicode icons are cool--but they definitely don't belong in a URL fragment.'
        tidyText = roughText.replace(/[^\w\s-]/gi, '')    // ' Unicode icons are cool--but they definitely dont belong in a URL fragment'
                                .replace(/\s+/g, '-')     // '-Unicode-icons-are-cool--but-they-definitely-dont-belong-in-a-URL-fragment'
                                .replace(/-{2,}/g, '-')   // '-Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL-fragment'
                                .substring(0, 64)         // '-Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL'
                                .replace(/^-+|-+$/gm, '') // 'Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL'
                                .toLowerCase();           // 'unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-url'

        // Compare our generated ID to existing IDs (and increment it if needed)
        // before we add it to the page.
        newTidyText = tidyText;
        count = 0;
        do {
          if (index !== undefined) {
            newTidyText = tidyText + '-' + count;
          }
          // .indexOf is supported in IE9+.
          index = idList.indexOf(newTidyText);
          count += 1;
        } while (index !== -1);
        index = undefined;
        idList.push(newTidyText);

        // Assign it to our element.
        // Currently the setAttribute element is only supported in IE9 and above.
        elements[i].setAttribute('id', newTidyText);

        elementID = newTidyText;
      }

      readableID = elementID.replace(/-/g, ' ');

      // The following code builds the following DOM structure in a more effiecient (albeit opaque) way.
      // '<a class="anchorjs-link ' + this.options.class + '" href="#' + elementID + '" aria-label="Anchor link for: ' + readableID + '" data-anchorjs-icon="' + this.options.icon + '"></a>';
      anchor = document.createElement('a');
      anchor.className = 'anchorjs-link ' + this.options.class;
      anchor.href = '#' + elementID;
      anchor.setAttribute('aria-label', 'Anchor link for: ' + readableID);
      anchor.setAttribute('data-anchorjs-icon', this.options.icon);

      if (this.options.visible === 'always') {
        anchor.style.opacity = '1';
      }

      if (this.options.icon === '\ue9cb') {
        anchor.style.fontFamily = 'anchorjs-icons';
        anchor.style.fontStyle = 'normal';
        anchor.style.fontVariant = 'normal';
        anchor.style.fontWeight = 'normal';
        anchor.style.lineHeight = 1;
      }

      if (this.options.placement === 'left') {
        anchor.style.position = 'absolute';
        anchor.style.marginLeft = '-1em';
        anchor.style.paddingRight = '0.5em';
        elements[i].insertBefore(anchor, elements[i].firstChild);
      } else { // if the option provided is `right` (or anything else).
        anchor.style.paddingLeft = '0.375em';
        elements[i].appendChild(anchor);
      }
    }

    return this;
  };

  this.remove = function(selector) {
    var domAnchor,
        elements = document.querySelectorAll(selector);
    for (var i = 0; i < elements.length; i++) {
      domAnchor = elements[i].querySelector('.anchorjs-link');
      if (domAnchor) {
        elements[i].removeChild(domAnchor);
      }
    }
    return this;
  };

  this._addBaselineStyles = function() {
    // We don't want to add global baseline styles if they've been added before.
    if (document.head.querySelector('style.anchorjs') !== null) {
      return;
    }

    var style = document.createElement('style'),
        linkRule =
        ' .anchorjs-link {'                       +
        '   opacity: 0;'                          +
        '   text-decoration: none;'               +
        '   -webkit-font-smoothing: antialiased;' +
        '   -moz-osx-font-smoothing: grayscale;'  +
        ' }',
        hoverRule =
        ' *:hover > .anchorjs-link,'              +
        ' .anchorjs-link:focus  {'                +
        '   opacity: 1;'                          +
        ' }',
        anchorjsLinkFontFace =
        ' @font-face {'                           +
        '   font-family: "anchorjs-icons";'       +
        '   font-style: normal;'                  +
        '   font-weight: normal;'                 + // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above
        '   src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBTUAAAC8AAAAYGNtYXAWi9QdAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5Zgq29TcAAAF4AAABNGhlYWQEZM3pAAACrAAAADZoaGVhBhUDxgAAAuQAAAAkaG10eASAADEAAAMIAAAAFGxvY2EAKACuAAADHAAAAAxtYXhwAAgAVwAAAygAAAAgbmFtZQ5yJ3cAAANIAAAB2nBvc3QAAwAAAAAFJAAAACAAAwJAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpywPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6cv//f//AAAAAAAg6cv//f//AAH/4xY5AAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAACADEARAJTAsAAKwBUAAABIiYnJjQ/AT4BMzIWFxYUDwEGIicmND8BNjQnLgEjIgYPAQYUFxYUBw4BIwciJicmND8BNjIXFhQPAQYUFx4BMzI2PwE2NCcmNDc2MhcWFA8BDgEjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAEAAAABAACiToc1Xw889QALBAAAAAAA0XnFFgAAAADRecUWAAAAAAJTAsAAAAAIAAIAAAAAAAAAAQAAA8D/wAAABAAAAAAAAlMAAQAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAACAAAAAoAAMQAAAAAACgAUAB4AmgABAAAABQBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEADgAAAAEAAAAAAAIABwCfAAEAAAAAAAMADgBLAAEAAAAAAAQADgC0AAEAAAAAAAUACwAqAAEAAAAAAAYADgB1AAEAAAAAAAoAGgDeAAMAAQQJAAEAHAAOAAMAAQQJAAIADgCmAAMAAQQJAAMAHABZAAMAAQQJAAQAHADCAAMAAQQJAAUAFgA1AAMAAQQJAAYAHACDAAMAAQQJAAoANAD4YW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzUmVndWxhcgBSAGUAZwB1AGwAYQByYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format("truetype");' +
        ' }',
        pseudoElContent =
        ' [data-anchorjs-icon]::after {'          +
        '   content: attr(data-anchorjs-icon);'   +
        ' }',
        firstStyleEl;

    style.className = 'anchorjs';
    style.appendChild(document.createTextNode('')); // Necessary for Webkit.

    // We place it in the head with the other style tags, if possible, so as to
    // not look out of place. We insert before the others so these styles can be
    // overridden if necessary.
    firstStyleEl = document.head.querySelector('[rel="stylesheet"], style');
    if (firstStyleEl === undefined) {
      document.head.appendChild(style);
    } else {
      document.head.insertBefore(style, firstStyleEl);
    }

    style.sheet.insertRule(linkRule, style.sheet.cssRules.length);
    style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);
    style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);
    style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);
  };
}

var anchors = new AnchorJS();

/*

    Basscss v5.2.0
    Low-level CSS toolkit
    http://basscss.com

*/


body, button { margin: 0 }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
}

img { max-width: 100% }
svg { max-height: 100% }
/* Basscss Base Forms */

input,
select,
textarea,
fieldset {
  font-size: 1rem;
  margin-top: 0;
  margin-bottom: .5rem;
  margin-bottom: .5rem;
}

input[type=text],
input[type=datetime],
input[type=datetime-local],
input[type=email],
input[type=month],
input[type=number],
input[type=password],
input[type=search],
input[type=tel],
input[type=time],
input[type=url],
input[type=week] {
  box-sizing: border-box;
  height: 2.25rem;
  padding: .5rem .5rem;
  vertical-align: middle;
  -webkit-appearance: none;
}

select {
  box-sizing: border-box;
  line-height: 1.75;
  padding: .5rem .5rem;
}

select:not([multiple]) {
  height: 2.25rem;
  vertical-align: middle;
}

textarea {
  box-sizing: border-box;
  line-height: 1.75;
  padding: .5rem .5rem;
}

.fieldset-reset {
  padding: 0;
  margin-left: 0;
  margin-right: 0;
  border: 0;
}
.fieldset-reset legend {
  padding: 0;
}
/* Basscss Base Buttons */

button,
.button {
  font-size: inherit;
  font-weight: bold;
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  box-sizing: border-box;
  line-height: 1.125rem;
  padding: .4rem 0.6rem;
  margin: 0;
  height: auto;
  border: 1px solid transparent;
  vertical-align: middle;
  -webkit-appearance: none;
}

::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.button:hover { text-decoration: none }
/* Basscss Base Tables */

table {
  border-collapse: separate;
  border-spacing: 0;
  max-width: 100%;
  width: 100%;
}

th {
  text-align: left;
  font-weight: bold;
}

th,
td {
  padding: .25rem 1rem;
  line-height: inherit;
}

th { vertical-align: bottom }
td { vertical-align: top }
/* Basscss Base Typography */

body {
  font-family: 'Helvetica Neue', Helvetica, sans-serif;
  line-height: 1.5;
  font-size: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Helvetica Neue', Helvetica, sans-serif;
  font-weight: bold;
  line-height: 1.25;
  margin-top: 1em;
  margin-bottom: .5em;
}

p, dl, ol, ul {
  font-size: 1rem;
  margin-top: 0;
  margin-bottom: 1rem;
}

ol, ul {
  padding-left: 2rem;
}

pre, code, samp {
  font-family: Consolas, 'Source Code Pro', monospace;
  font-size: inherit;
}

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow-x: scroll;
  padding: 1rem;
  background-color: rgba(0,0,0,.03125);
}

hr {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

blockquote {
  margin-top: 2rem;
  margin-bottom: 2rem;
  margin-left: 0;
  padding-left: 1rem;
  padding-right: 1rem;
}
  blockquote,
  blockquote p {
    font-size: 1.25rem;
    font-style: italic;
  }

h1, .h1 { font-size: 2rem }
h2, .h2 { font-size: 1.5rem }
h3, .h3 { font-size: 1.25rem }
h4, .h4 { font-size: 1rem }
h5, .h5 { font-size: .875rem }
h6, .h6 { font-size: .75rem }

.list-reset {
  list-style: none;
  padding-left: 0;
}

/* Basscss Utility Layout */

.inline       { display: inline }
.block        { display: block }
.inline-block { display: inline-block }

.overflow-hidden { overflow: hidden }
.overflow-scroll { overflow: scroll }
.overflow-auto   { overflow: auto }

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table
}
.clearfix:after { clear: both }

.left  { float: left }
.right { float: right }

.fit { max-width: 100% }

.half-width { width: 50% }
.full-width { width: 100% }
/* Basscss Utility Typography */

.bold    { font-weight: bold }
.regular { font-weight: normal }
.italic  { font-style: italic }
.caps    { text-transform: uppercase; letter-spacing: .2em; }

.left-align   { text-align: left }
.center       { text-align: center }
.right-align  { text-align: right }
.justify      { text-align: justify }

.nowrap { white-space: nowrap }
/* Basscss Utility White Space */

.m0  { margin:        0 }
.mt0 { margin-top:    0 }
.mr0 { margin-right:  0 }
.mb0 { margin-bottom: 0 }
.ml0 { margin-left:   0 }

.m1  { margin: .5rem }
.mt1 { margin-top: .5rem }
.mr1 { margin-right: .5rem }
.mb1 { margin-bottom: .5rem }
.ml1 { margin-left: .5rem }

.m2  { margin: 1rem }
.mt2 { margin-top: 1rem }
.mr2 { margin-right: 1rem }
.mb2 { margin-bottom: 1rem }
.ml2 { margin-left: 1rem }

.m3  { margin: 2rem }
.mt3 { margin-top: 2rem }
.mr3 { margin-right: 2rem }
.mb3 { margin-bottom: 2rem }
.ml3 { margin-left: 2rem }

.m4  { margin: 4rem }
.mt4 { margin-top: 4rem }
.mr4 { margin-right: 4rem }
.mb4 { margin-bottom: 4rem }
.ml4 { margin-left: 4rem }

.mxn1 { margin-left: -.5rem; margin-right: -.5rem; }
.mxn2 { margin-left: -1rem; margin-right: -1rem; }
.mxn3 { margin-left: -2rem; margin-right: -2rem; }
.mxn4 { margin-left: -4rem; margin-right: -4rem; }

.mx-auto { margin-left: auto; margin-right: auto; }
.p1  { padding: .5rem }
.py1 { padding-top: .5rem; padding-bottom: .5rem }
.px1 { padding-left: .5rem; padding-right: .5rem }

.p2  { padding: 1rem }
.py2 { padding-top: 1rem; padding-bottom: 1rem }
.px2 { padding-left: 1rem; padding-right: 1rem }

.p3  { padding: 2rem }
.py3 { padding-top: 2rem; padding-bottom: 2rem }
.px3 { padding-left: 2rem; padding-right: 2rem }

.p4  { padding: 4rem }
.py4 { padding-top: 4rem; padding-bottom: 4rem }
.px4 { padding-left: 4rem; padding-right: 4rem }
/* Basscss Utility Responsive States */

.sm-show, .md-show, .lg-show {
  display: none !important
}

@media (min-width: 40em) {
  .sm-show { display: block !important }
}

@media (min-width: 52em) {
  .md-show { display: block !important }
}

@media (min-width: 64em) {
  .lg-show { display: block !important }
}


@media (min-width: 40em) {
  .sm-hide { display: none !important }
}

@media (min-width: 52em) {
  .md-hide { display: none !important }
}

@media (min-width: 64em) {
  .lg-hide { display: none !important }
}

.display-none { display: none !important }

.hide {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}
/* Basscss Positions */

.relative { position: relative }
.absolute { position: absolute }
.fixed    { position: fixed }

.top-0    { top: 0 }
.right-0  { right: 0 }
.bottom-0 { bottom: 0 }
.left-0   { left: 0 }

.z1 { z-index: 1 }
.z2 { z-index: 2 }
.z3 { z-index: 3 }
.z4 { z-index: 4 }

.absolute-center {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  display: table;
}
/* Basscss UI Utility Button Sizes */

.button-small {
  padding: .25rem .5rem;
}

.button-big {
  padding: 1rem 1.25rem;
}

.button-narrow {
  padding-left: .5rem;
  padding-right: .5rem;
}

/* Basscss Grid */

.container {
  max-width: 64em;
  margin-left: auto;
  margin-right: auto;
}
.col {
  float: left;
  box-sizing: border-box;
}

.col-right {
  float: right;
  box-sizing: border-box;
}

.col-1 {
  width: 8.33333%;
}

.col-2 {
  width: 16.66667%;
}

.col-3 {
  width: 25%;
}

.col-4 {
  width: 33.33333%;
}

.col-5 {
  width: 41.66667%;
}

.col-6 {
  width: 50%;
}

.col-7 {
  width: 58.33333%;
}

.col-8 {
  width: 66.66667%;
}

.col-9 {
  width: 75%;
}

.col-10 {
  width: 83.33333%;
}

.col-11 {
  width: 91.66667%;
}

.col-12 {
  width: 100%;
}
@media (min-width: 40em) {

  .sm-col {
    float: left;
    box-sizing: border-box;
  }

  .sm-col-right {
    float: right;
    box-sizing: border-box;
  }

  .sm-col-1 {
    width: 8.33333%;
  }

  .sm-col-2 {
    width: 16.66667%;
  }

  .sm-col-3 {
    width: 25%;
  }

  .sm-col-4 {
    width: 33.33333%;
  }

  .sm-col-5 {
    width: 41.66667%;
  }

  .sm-col-6 {
    width: 50%;
  }

  .sm-col-7 {
    width: 58.33333%;
  }

  .sm-col-8 {
    width: 66.66667%;
  }

  .sm-col-9 {
    width: 75%;
  }

  .sm-col-10 {
    width: 83.33333%;
  }

  .sm-col-11 {
    width: 91.66667%;
  }

  .sm-col-12 {
    width: 100%;
  }

}
@media (min-width: 52em) {

  .md-col {
    float: left;
    box-sizing: border-box;
  }

  .md-col-right {
    float: right;
    box-sizing: border-box;
  }

  .md-col-1 {
    width: 8.33333%;
  }

  .md-col-2 {
    width: 16.66667%;
  }

  .md-col-3 {
    width: 25%;
  }

  .md-col-4 {
    width: 33.33333%;
  }

  .md-col-5 {
    width: 41.66667%;
  }

  .md-col-6 {
    width: 50%;
  }

  .md-col-7 {
    width: 58.33333%;
  }

  .md-col-8 {
    width: 66.66667%;
  }

  .md-col-9 {
    width: 75%;
  }

  .md-col-10 {
    width: 83.33333%;
  }

  .md-col-11 {
    width: 91.66667%;
  }

  .md-col-12 {
    width: 100%;
  }

}
@media (min-width: 64em) {

  .lg-col {
    float: left;
    box-sizing: border-box;
  }

  .lg-col-right {
    float: right;
    box-sizing: border-box;
  }

  .lg-col-1 {
    width: 8.33333%;
  }

  .lg-col-2 {
    width: 16.66667%;
  }

  .lg-col-3 {
    width: 25%;
  }

  .lg-col-4 {
    width: 33.33333%;
  }

  .lg-col-5 {
    width: 41.66667%;
  }

  .lg-col-6 {
    width: 50%;
  }

  .lg-col-7 {
    width: 58.33333%;
  }

  .lg-col-8 {
    width: 66.66667%;
  }

  .lg-col-9 {
    width: 75%;
  }

  .lg-col-10 {
    width: 83.33333%;
  }

  .lg-col-11 {
    width: 91.66667%;
  }

  .lg-col-12 {
    width: 100%;
  }

}
/*
 * Basscss Flex Object
 */

.flex { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex }

.flex-column  { -webkit-box-orient: vertical; -webkit-box-direction: normal; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column }
.flex-wrap    { -webkit-flex-wrap: wrap; -ms-flex-wrap: wrap; flex-wrap: wrap }

.flex-center   { -webkit-box-align: center; -webkit-align-items: center; -ms-flex-align: center; align-items: center }
.flex-baseline { -webkit-box-align: baseline; -webkit-align-items: baseline; -ms-flex-align: baseline; align-items: baseline }
.flex-stretch  { -webkit-box-align: stretch; -webkit-align-items: stretch; -ms-flex-align: stretch; align-items: stretch }
.flex-start    { -webkit-box-align: start; -webkit-align-items: flex-start; -ms-flex-align: start; align-items: flex-start }
.flex-end      { -webkit-box-align: end; -webkit-align-items: flex-end; -ms-flex-align: end; align-items: flex-end }

.flex-first { -webkit-box-ordinal-group: 0; -webkit-order: -1; -ms-flex-order: -1; order: -1 }
.flex-last  { -webkit-box-ordinal-group: 1025; -webkit-order: 1024; -ms-flex-order: 1024; order: 1024 }

.flex-auto { -webkit-box-flex: 1; -webkit-flex: 1 1 auto; -ms-flex: 1 1 auto; flex: 1 1 auto }
.flex-grow { -webkit-box-flex: 1; -webkit-flex: 1 0 auto; -ms-flex: 1 0 auto; flex: 1 0 auto }
.flex-none { -webkit-box-flex: 0; -webkit-flex: none; -ms-flex: none; flex: none }

.flex > div { box-sizing: border-box }
@media (min-width: 40em) {
  .sm-flex { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex }
  .sm-flex > div { box-sizing: border-box }
}
@media (min-width: 52em) {
  .md-flex { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex }
  .md-flex > div { box-sizing: border-box }
}
@media (min-width: 64em) {
  .lg-flex { display: -webkit-box; display: -webkit-flex; display: -ms-flexbox; display: flex }
  .lg-flex > div { box-sizing: border-box }
} /* New */

/* Basscss Color Base */

/*

   COLOR VARIABLES

   - Cool
   - Warm
   - Gray Scale

*/

:root {

  /* Cool */


  /* Warm */


  /* Gray scale */

}

body {
  color: #222;
  background-color: white;
}

a {
  color: #0074d9 ;
  color: #0074d9;
  text-decoration: none;
}

  a:hover {
    text-decoration: underline;
  }

hr {
  border: 0;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-bottom-color: rgba(0,0,0,.125);
}

.button {
  color: white;
  background-color: #0074d9 ;
  background-color: #0074d9;
  border-radius: 3px;
  /*
  -webkit-transition-duration: .05s;
          transition-duration: .05s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-property: box-shadow, background-color;
          transition-property: box-shadow, background-color;
          */
}

.button:hover {
  box-shadow: inset 0 0 0 20rem rgba(0,0,0,.0625);
}

.button:focus {
  outline: none;
  border-color: rgba(0,0,0,.125);
  box-shadow: 0 0 2px 1px rgba(0,0,0,.25);
}

.button:active,
.button.is-active {
  box-shadow: inset 0 0 0 20rem rgba(0,0,0,.125),
    inset 0 3px 4px 0 rgba(0,0,0,.25),
    0 0 1px rgba(0,0,0,.125);
}

.button:disabled,
.button.is-disabled {
  opacity: .5;
}
/* Basscss Color Forms */

/*

   COLOR VARIABLES

   - Cool
   - Warm
   - Gray Scale

*/

:root {

  /* Cool */


  /* Warm */


  /* Gray scale */

}

.field-light {
  background-color: white;
  -webkit-transition: box-shadow .2s ease;
          transition: box-shadow .2s ease;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0,0,0,.125);
  border-radius: 3px;
}

.field-light:focus {
  outline: none;
  border-color: #0074d9;
  box-shadow: 0 0 2px rgba(0, 116, 217, 0.5);
}

.field-light:disabled {
  color: #aaa;
  background-color: rgba(0,0,0,.125);
}

.field-light:read-only:not(select) {
  background-color: rgba(0,0,0,.125);
}

.field-light:invalid {
  border-color: #ff4136;
}

.field-light.is-success {
  border-color: #2ecc40;
}

.field-light.is-warning {
  border-color: #ffdc00;
}

.field-light.is-error {
  border-color: #ff4136;
}


.radio-light,
.checkbox-light {
  -webkit-transition: box-shadow .2s ease;
          transition: box-shadow .2s ease;
}

.radio-light {
  border-radius: 50%;
}
  
.radio-light:focus,
.checkbox-light:focus {
  outline: none;
  box-shadow: 0 0 2px rgba(0, 116, 217, 0.5);
}
/* Basscss Color Forms Dark */

/*

   COLOR VARIABLES

   - Cool
   - Warm
   - Gray Scale

*/

:root {

  /* Cool */


  /* Warm */


  /* Gray scale */

}

.field-dark {
  color: white;
  background-color: rgba(0,0,0,.25);
  border: 1px solid rgba(0,0,0,.0625);
  border-radius: 3px;
  border-radius: 3px;
}

.field-dark::-webkit-input-placeholder {
  color: rgba(255,255,255,.75);
}

.field-dark::-moz-placeholder {
  color: rgba(255,255,255,.75);
}

.field-dark:-ms-input-placeholder {
  color: rgba(255,255,255,.75);
}

.field-dark::placeholder {
  color: rgba(255,255,255,.75);
}

.field-dark:focus {
  outline: 0;
  border: 1px solid rgba(255,255,255,.5);
}

.field-dark:read-only:not(select) {
  background-color: rgba(255,255,255,.25);
}

.field-dark:invalid {
  border-color: #ff4136;
}

.field-dark.is-success {
  border-color: #2ecc40;
}

.field-dark.is-warning {
  border-color: #ffdc00;
}

.field-dark.is-error {
  border-color: #ff4136;
}
/* Basscss Input Range */

input[type=range] {
  vertical-align: middle;
  background-color: transparent;
}

.range-light {
  color: inherit;
  -webkit-appearance: none;
  padding-top: .5rem;
  padding-bottom: .5rem;
}

.range-light::-webkit-slider-thumb {
  -webkit-appearance: none;
  position: relative;
  width: .5rem;
  height: 1.25rem;
  border-radius: 3px;
  background-color: currentcolor;
  cursor: pointer;
  margin-top: -0.5rem;
}

/* Touch screen friendly pseudo element */
.range-light::-webkit-slider-thumb:before {
  content: '';
  display: block;
  position: absolute;
  top: -0.5rem;
  left: -0.875rem;
  width: 2.25rem;
  height: 2.25rem;
  opacity: 0;
}

.range-light::-moz-range-thumb {
  width: .5rem;
  height: 1.25rem;
  border-radius: 3px;
  border-color: transparent;
  border-width: 0;
  background-color: currentcolor;
  cursor: pointer;
}

.range-light::-webkit-slider-runnable-track {
  height: 0.25rem;
  cursor: pointer;
  border-radius: 3px;
  background-color: rgba(0,0,0,.25);
}

.range-light::-moz-range-track {
  height: 0.25rem;
  cursor: pointer;
  border-radius: 3px;
  background-color: rgba(0,0,0,.25);
}

.range-light:focus {
  outline: none;
}

.range-light:focus::-webkit-slider-thumb {
  outline: none;
  border: 0;
  box-shadow: 0 0 1px 2px currentcolor;
}

.range-light:focus::-moz-range-thumb {
  outline: none;
  border: 0;
  box-shadow: 0 0 1px 2px currentcolor;
}
/* Basscss Progress */

.progress {
  display: block;
  width: 100%;
  height: 0.5625rem;
  margin: .5rem 0;
  background-color: rgba(0,0,0,.125);
  border: 0;
  border-radius: 10000px;
  overflow: hidden;
  -webkit-appearance: none;
  cursor: pointer;
}

.progress::-webkit-progress-bar {
  -webkit-appearance: none;
  background-color: rgba(0,0,0,.125)
}

.progress::-webkit-progress-value {
  -webkit-appearance: none;
  background-color: currentColor;
}

.progress::-moz-progress-bar {
  background-color: currentColor;
}
/* Basscss Color Tables */

.table-light th,
.table-light td {
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-bottom-color: rgba(0,0,0,.125);
}

.table-light tr:last-child td {
  border-bottom: 0;
}

/* Basscss Button Outline */

.button-outline {
  position: relative;
  z-index: 2;
  color: inherit;
  background-color: transparent;
  border-radius: 3px;
  border: 1px solid currentcolor;
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-property: box-shadow, background-color;
          transition-property: box-shadow, background-color;
}

.button-outline:before {
  content: '';
  width: 100%;
  height: 100%;
  display: block;
  position: absolute;
  z-index: -1;
  top: -1px;
  left: -1px;
  border: 1px solid transparent;
  background-color: currentcolor;
  border-radius: 3px;
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-property: opacity;
          transition-property: opacity;
  opacity: 0;
}

.button-outline:hover {
  box-shadow: none;
}

.button-outline:hover:before {
  opacity: .125;
}

.button-outline:focus {
  outline: none;
  border: 1px solid currentcolor;
  box-shadow: 0 0 3px 1px;
}

.button-outline:active,
.button-outline.is-active {
  box-shadow: inset 0 1px 5px 0, 0 0 1px;
}

.button-outline:disabled,
.button-outline.is-disabled {
  opacity: .5;
} /* New */
/* Basscss Button Transparent */

.button-transparent {
  position: relative;
  z-index: 2;
  color: inherit;
  background-color: transparent;
  border-radius: 0;
  border: 1px solid transparent;
  /*
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-property: box-shadow;
          transition-property: box-shadow;
          */
}

.button-transparent:before {
  content: '';
  width: 100%;
  height: 100%;
  display: block;
  position: absolute;
  z-index: -1;
  top: -1px;
  left: -1px;
  border: 1px solid transparent;
  background-color: currentcolor;
  -webkit-transition-duration: .1s;
          transition-duration: .1s;
  -webkit-transition-timing-function: ease-out;
          transition-timing-function: ease-out;
  -webkit-transition-property: opacity;
          transition-property: opacity;
  opacity: 0;
}

.button-transparent:hover {
  box-shadow: none;
}

.button-transparent:hover:before {
  opacity: .0625;
  opacity: .09375;
}

.button-transparent:focus {
  outline: none;
  border-color: transparent;
  box-shadow: 0 0 3px;
}

.button-transparent:active:before,
.button-transparent.is-active:before {
  opacity: .0625;
}

.button-transparent:disabled,
.button-transparent.is-disabled {
  opacity: .5;
} /* New */
/* Basscss Background Images */

.bg-cover   { background-size: cover }
.bg-contain { background-size: contain }

.bg-center  { background-position: center }
.bg-top     { background-position: top }
.bg-right   { background-position: right }
.bg-bottom  { background-position: bottom }
.bg-left    { background-position: left } /* New */
/* Basscss Color Borders */

.border {
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0,0,0,.125);
}

.border-top {
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: rgba(0,0,0,.125);
}

.border-right {
  border-right-style: solid;
  border-right-width: 1px;
  border-right-color: rgba(0,0,0,.125);
}

.border-bottom {
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-bottom-color: rgba(0,0,0,.125);
}

.border-left {
  border-left-style: solid;
  border-left-width: 1px;
  border-left-color: rgba(0,0,0,.125);
}

.rounded { border-radius: 3px }
.circle  { border-radius: 50% }

.rounded-top    { border-radius: 3px 3px 0 0 }
.rounded-right  { border-radius: 0 3px 3px 0 }
.rounded-bottom { border-radius: 0 0 3px 3px }
.rounded-left   { border-radius: 3px 0 0 3px }

.not-rounded { border-radius: 0 }

/* Basscss Colors */


/* Color */

.black, .dark-gray   { color: #222 }
.gray, .mid-gray     { color: #aaa }
.silver, .light-gray { color: #ddd }
.white { color: #fff }

.aqua  { color: #7fdbff }
.blue  { color: #0074d9 }
.navy  { color: #001f3f }
.teal  { color: #39cccc }
.green { color: #2ecc40 }
.olive { color: #3d9970 }
.lime  { color: #01ff70 }

.yellow  { color: #ffdc00 }
.orange  { color: #ff851b }
.red     { color: #ff4136 }
.fuchsia { color: #f012be }
.purple  { color: #b10dc9 }
.maroon  { color: #85144b }


/* Background Color */

.bg-black, .bg-dark-gray   { background-color: #222 }
.bg-gray, .bg-mid-gray     { background-color: #aaa }
.bg-silver, .bg-light-gray { background-color: #ddd }
.bg-white  { background-color: #fff }

.bg-aqua  { background-color: #7fdbff }
.bg-blue  { background-color: #0074d9 }
.bg-navy  { background-color: #001f3f }
.bg-teal  { background-color: #39cccc }
.bg-green { background-color: #2ecc40 }
.bg-olive { background-color: #3d9970 }
.bg-lime  { background-color: #01ff70 }

.bg-yellow  { background-color: #ffdc00 }
.bg-orange  { background-color: #ff851b }
.bg-red     { background-color: #ff4136 }
.bg-fuchsia { background-color: #f012be }
.bg-purple  { background-color: #b10dc9 }
.bg-maroon  { background-color: #85144b }

.bg-darken-0 { background-color: rgba(0,0,0,.03125) }
.bg-darken-1 { background-color: rgba(0,0,0,.0625) }
.bg-darken-2 { background-color: rgba(0,0,0,.125) }
.bg-darken-3 { background-color: rgba(0,0,0,.25) }
.bg-darken-4 { background-color: rgba(0,0,0,.5) }


/* Border Color */

.border-aqua  { border-color: #7fdbff }
.border-blue  { border-color: #0074d9 }
.border-navy  { border-color: #001f3f }
.border-teal  { border-color: #39cccc }
.border-green { border-color: #2ecc40 }
.border-olive { border-color: #3d9970 }
.border-lime  { border-color: #01ff70 }

.border-yellow  { border-color: #ffdc00 }
.border-orange  { border-color: #ff851b }
.border-red     { border-color: #ff4136 }
.border-fuchsia { border-color: #f012be }
.border-purple  { border-color: #b10dc9 }
.border-maroon  { border-color: #85144b }

.border-black  { border-color: #222 }
.border-gray   { border-color: #aaa }
.border-silver { border-color: #ddd }
.border-white  { border-color: #fff }

.border-darken-1 { border-color: rgba(0,0,0,.0625) }
.border-darken-2 { border-color: rgba(0,0,0,.125) }
.border-darken-3 { border-color: rgba(0,0,0,.25) }
.border-darken-4 { border-color: rgba(0,0,0,.5) }

/* Opacity */
.muted { opacity: .5 }


/* Variables */
/* Basscss Defaults */

:root {

  /* Legacy support */

}


/*

github.com style (c) Vasily Polovnyov <vast@whiteants.net>

*/

.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  color: #333;
  background: #f8f8f8;
  -webkit-text-size-adjust: none;
}

.hljs-comment,
.diff .hljs-header,
.hljs-javadoc {
  color: #998;
  font-style: italic;
}

.hljs-keyword,
.css .rule .hljs-keyword,
.hljs-winutils,
.nginx .hljs-title,
.hljs-subst,
.hljs-request,
.hljs-status {
  color: #1184CE;
}

.hljs-number,
.hljs-hexcolor,
.ruby .hljs-constant {
  color: #ed225d;
}

.hljs-string,
.hljs-tag .hljs-value,
.hljs-phpdoc,
.hljs-dartdoc,
.tex .hljs-formula {
  color: #ed225d;
}

.hljs-title,
.hljs-id,
.scss .hljs-preprocessor {
  color: #900;
  font-weight: bold;
}

.hljs-list .hljs-keyword,
.hljs-subst {
  font-weight: normal;
}

.hljs-class .hljs-title,
.hljs-type,
.vhdl .hljs-literal,
.tex .hljs-command {
  color: #458;
  font-weight: bold;
}

.hljs-tag,
.hljs-tag .hljs-title,
.hljs-rules .hljs-property,
.django .hljs-tag .hljs-keyword {
  color: #000080;
  font-weight: normal;
}

.hljs-attribute,
.hljs-variable,
.lisp .hljs-body {
  color: #008080;
}

.hljs-regexp {
  color: #009926;
}

.hljs-symbol,
.ruby .hljs-symbol .hljs-string,
.lisp .hljs-keyword,
.clojure .hljs-keyword,
.scheme .hljs-keyword,
.tex .hljs-special,
.hljs-prompt {
  color: #990073;
}

.hljs-built_in {
  color: #0086b3;
}

.hljs-preprocessor,
.hljs-pragma,
.hljs-pi,
.hljs-doctype,
.hljs-shebang,
.hljs-cdata {
  color: #999;
  font-weight: bold;
}

.hljs-deletion {
  background: #fdd;
}

.hljs-addition {
  background: #dfd;
}

.diff .hljs-change {
  background: #0086b3;
}

.hljs-chunk {
  color: #aaa;
}

/* global anchors */

// add anchor links to headers
anchors.options.placement = 'left';
anchors.add();

// Filter UI
var tocElements = document.getElementById('toc').getElementsByTagName('a');
document.getElementById('filter-input').addEventListener('keyup', function(e) {

  // enter key
  if (e.keyCode === 13) {
    // go to the first displayed item in the toc
    for (var i = 0; i < tocElements.length; i++) {
      var element = tocElements[i];
      if (!element.classList.contains('hide')) {
        location.replace(element.href);
        return e.preventDefault();
      }
    }
  }

  var match = function() { return true; },
    value = this.value.toLowerCase();

  if (!value.match(/^\s*$/)) {
    match = function(text) { return text.toLowerCase().indexOf(value) !== -1; };
  }

  for (var i = 0; i < tocElements.length; i++) {
    var element = tocElements[i];
    if (match(element.innerHTML)) {
      element.classList.remove('hide');
    } else {
      element.classList.add('hide');
    }
  }
});

.documentation a {
  color: #1184CE;
}

.documentation .suppress-p-margin p {
  margin:0;
}

.force-inline p {
  display: inline;
  color: #222;
}

.container-small {
  max-width: 58rem;
  margin-left: auto;
  margin-right: auto;
}

.max-height-100 {
  max-height: 100%;
}

.fade {
  opacity:0.50;
}

.button-indent {
  padding: .25rem 1.5rem;
  font-size: 90%;
}

.section-indent {
  border-left: 2px solid #eee;
}

.bg-cloudy {
  background: #fafafa;
}

.force-inline * {
  display:inline;
}

section:target h3 {
  font-weight:700;
}

.documentation,
.documentation h1,
.documentation h2,
.documentation h3,
.documentation h4,
.documentation h5,
.documentation h6 {
    font-family: 'Source Sans Pro', Helvetica, sans-serif;
}

.documentation pre,
.documentation code,
.documentation samp {
  font-family: 'Source Code Pro', monospace;
  font-size: 90%;
}

.documentation td,
.documentation th {
    padding: .25rem .25rem;
}

h1:hover .anchorjs-link,
h2:hover .anchorjs-link,
h3:hover .anchorjs-link,
h4:hover .anchorjs-link {
  opacity: 1;
}

.collapsible .collapser {
  display:none;
}

.collapsible:target .collapser {
  display: block;
}

.fix-3 {
  width: 25%;
  max-width: 244px;
}

@media (min-width: 52em) {
  .fix-margin-3 {
    margin-left: 25%;
  }
}

<html>
<head>
  <meta charset='utf-8' />
  <title> </title>
  <meta name='viewport' content='width=device-width,initial-scale=1'>
  <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700|Source+Code+Pro:400,500,700' rel='stylesheet' type='text/css'>
  <link href='assets/bass.css' type='text/css' rel='stylesheet' />
  <link href='assets/style.css' type='text/css' rel='stylesheet' />
  <link href='assets/github.css' type='text/css' rel='stylesheet' />
</head>
<body class='documentation'>
  <div class='container'>
    <div class='clearfix md-mxn2'>
      <div class='fixed md-show fix-3 overflow-auto max-height-100'>
        <div class='px1 py1'>
          <a href='/' class='h5 button block button-transparent'> </a>
          <div class='px2'>
            <input
              placeholder='Filter'
              id='filter-input'
              class='col12 block field-light'
              type='text' />
          </div>
          <div id='toc' class='px2'>
              <a
                href='#klass'
                class='block bold'>
                Klass
              </a>
                <a
                  href='#klass/magic-number'
                  class='regular block'>
                  .MAGIC_NUMBER
                </a>
                <a
                  href='#klass/isarrayofbuffers'
                  class='regular block'>
                  .isArrayOfBuffers
                </a>
                <a
                  href='#klass/isbuffer'
                  class='regular block'>
                  .isBuffer
                </a>
                <a
                  href='#klass/isclass'
                  class='regular block'>
                  .isClass
                </a>
                <a
                  href='#klass/isweird'
                  class='regular block'>
                  .isWeird
                </a>
                <a
                  href='#klass/getfoo'
                  class='regular block'>
                  #getFoo
                </a>
                <a
                  href='#klass/withoptions'
                  class='regular block'>
                  #withOptions
                </a>
                <a
                  href='#klass/event'
                  class='regular block'>
                  <code>ⓔ event</code>
                </a>
              <a
                href='#bar'
                class='block bold'>
                bar
              </a>
              <a
                href='#bar'
                class='block bold'>
                bar
              </a>
          </div>
        </div>
      </div>
      <div class='fix-margin-3'>
        <div class='px2'>
<div class='py1'><section class='py2 clearfix'>
  <h2 id='klass' class='mt0'>
    Klass<span class='gray'></span>
  </h2>
  <p>Creates a new Klass</p>

      <h4>Static members</h4>
        <div class='collapsible' id='klass/magic-number'>
          <a href='#klass/magic-number'>
            <code>
              .MAGIC_NUMBER<span class='gray'></span>
            </code>
            <span class='force-inline'>
              <p>A magic number that identifies this Klass.</p>

            </span>
          </a>
          <div class='collapser border px2 m2'>
            <section class='py2 clearfix'>
              <h2 id='klass/magic-number' class='mt0'>
                MAGIC_NUMBER<span class='gray'></span>
              </h2>
              <p>A magic number that identifies this Klass.</p>
            
            </section>
          </div>
        </div>
        <div class='collapsible' id='klass/isarrayofbuffers'>
          <a href='#klass/isarrayofbuffers'>
            <code>
              .isArrayOfBuffers<span class='gray'>(buffers)</span>
            </code>
            <span class='force-inline'>
              <p>This method takes an array of buffers and counts them</p>

            </span>
          </a>
          <div class='collapser border px2 m2'>
            <section class='py2 clearfix'>
              <h2 id='klass/isarrayofbuffers' class='mt0'>
                isArrayOfBuffers<span class='gray'>(buffers)</span>
              </h2>
              <p>This method takes an array of buffers and counts them</p>
            
                <h4>Parameters</h4>
                <ul class='suppress-p-margin'>
                    <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">Array</a></code><<code><a href="https://nodejs.org/api/buffer.html">Buffer</a></code>> <strong>buffers</strong>
                      :
                      <span class='force-inline'>
                        <p>some buffers</p>
            
                      </span>
                    </li>
                </ul>
                  <h4>Returns</h4>
                  <code><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></code></code>
                  :
                  <span class='force-inline'>
                    <p>how many</p>
            
                  </span>
            </section>
          </div>
        </div>
        <div class='collapsible' id='klass/isbuffer'>
          <a href='#klass/isbuffer'>
            <code>
              .isBuffer<span class='gray'>(buf, [size])</span>
            </code>
            <span class='force-inline'>
              <p>This method takes a Buffer object that will be linked to nodejs.org</p>

            </span>
          </a>
          <div class='collapser border px2 m2'>
            <section class='py2 clearfix'>
              <h2 id='klass/isbuffer' class='mt0'>
                isBuffer<span class='gray'>(buf, [size])</span>
              </h2>
              <p>This method takes a Buffer object that will be linked to nodejs.org</p>
            
                <h4>Parameters</h4>
                <ul class='suppress-p-margin'>
                    <li><code><a href="https://nodejs.org/api/buffer.html">Buffer</a></code> or <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code> <strong>buf</strong>
                      :
                      <span class='force-inline'>
                        
                      </span>
                    </li>
                    <li><code>[<code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></code>]</code> <strong>size</strong>
                        (default <code>0</code>)
                      :
                      <span class='force-inline'>
                        <p>size</p>
            
                      </span>
                    </li>
                </ul>
                  <h4>Returns</h4>
                  <code><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></code>
                  :
                  <span class='force-inline'>
                    <p>whether the other thing is a Klass</p>
            
                  </span>
            </section>
          </div>
        </div>
        <div class='collapsible' id='klass/isclass'>
          <a href='#klass/isclass'>
            <code>
              .isClass<span class='gray'>(other, also)</span>
            </code>
            <span class='force-inline'>
              <p>Decide whether an object is a Klass instance
This is a <a href="klass"><code>klasssic</code></a>
This is a <a href="doesnot"><code>link to something that does not exist</code></a></p>

            </span>
          </a>
          <div class='collapser border px2 m2'>
            <section class='py2 clearfix'>
              <h2 id='klass/isclass' class='mt0'>
                isClass<span class='gray'>(other, also)</span>
              </h2>
              <p>Decide whether an object is a Klass instance
            This is a <a href="klass"><code>klasssic</code></a>
            This is a <a href="doesnot"><code>link to something that does not exist</code></a></p>
            
                <h4>Parameters</h4>
                <ul class='suppress-p-margin'>
                    <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code> <strong>other</strong>
                      :
                      <span class='force-inline'>
                        
                      </span>
                    </li>
                    <li>Any <strong>also</strong>
                      :
                      <span class='force-inline'>
                        
                      </span>
                    </li>
                </ul>
                  <h4>Returns</h4>
                  <code><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></code>
                  :
                  <span class='force-inline'>
                    <p>whether the other thing is a Klass</p>
            
                  </span>
            </section>
          </div>
        </div>
        <div class='collapsible' id='klass/isweird'>
          <a href='#klass/isweird'>
            <code>
              .isWeird<span class='gray'>(other)</span>
            </code>
            <span class='force-inline'>
              <p>A function that triggers the case where the autolinker doesn&apos;t find
the referenced class type</p>

            </span>
          </a>
          <div class='collapser border px2 m2'>
            <section class='py2 clearfix'>
              <h2 id='klass/isweird' class='mt0'>
                isWeird<span class='gray'>(other)</span>
              </h2>
              <p>A function that triggers the case where the autolinker doesn&apos;t find
            the referenced class type</p>
            
                <h4>Parameters</h4>
                <ul class='suppress-p-margin'>
                    <li><code>Weird</code> <strong>other</strong>
                      :
                      <span class='force-inline'>
                        
                      </span>
                    </li>
                </ul>
                  <h4>Returns</h4>
                  <code><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></code>
                  :
                  <span class='force-inline'>
                    <p>whether the other thing is a Klass</p>
            
                  </span>
            </section>
          </div>
        </div>
      <h4>Instance members</h4>
        <div class='collapsible' id='klass/getfoo'>
          <a href='#klass/getfoo'>
            <code>
              #getFoo<span class='gray'></span>
            </code>
            <span class='force-inline'>
              <p>Get this Klass&apos;s foo</p>

            </span>
          </a>
          <div class='collapser border px2'>
            <section class='py2 clearfix'>
              <h2 id='klass/getfoo' class='mt0'>
                getFoo<span class='gray'></span>
              </h2>
              <p>Get this Klass&apos;s foo</p>
            
                  <h4>Returns</h4>
                  <code><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">Number</a></code></code>
                  :
                  <span class='force-inline'>
                    <p>foo</p>
            
                  </span>
                <h4>Examples</h4>
            <pre class='overflow-auto'>foo.getFoo();</pre>
            </section>
          </div>
        </div>
        <div class='collapsible' id='klass/withoptions'>
          <a href='#klass/withoptions'>
            <code>
              #withOptions<span class='gray'>(options)</span>
            </code>
            <span class='force-inline'>
              <p>A function with an options parameter</p>

            </span>
          </a>
          <div class='collapser border px2'>
            <section class='py2 clearfix'>
              <h2 id='klass/withoptions' class='mt0'>
                withOptions<span class='gray'>(options)</span>
              </h2>
              <p>A function with an options parameter</p>
            
                <h4>Parameters</h4>
                <ul class='suppress-p-margin'>
                    <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code> <strong>options</strong>
                      :
                      <span class='force-inline'>
                        
                      </span>
                    </li>
                      <ul>
                          <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code> options.foo
                            </li>
                          <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></code> options.bar
                            </li>
                      </ul>
                </ul>
            </section>
          </div>
        </div>
        <div>
  <section class='py2 clearfix'>
    <h2 id='klass/event' class='mt0'>
      event<span class='gray'></span>
    </h2>
    <p>Klass event</p>
  
  </section>
        </div>
</section>
</div><div class='py1'><section class='py2 clearfix'>
  <h2 id='bar' class='mt0'>
    bar<span class='gray'></span>
  </h2>
  <p>Get an instance of <a href="klass"><code>Klass</code></a>. Will make
a <a href="klass"><code>klass instance multiword</code></a>,
like a <a href="klass"><code>klass</code></a></p>

      <h4>Returns</h4>
      <code>undefined</code>
      :
      <span class='force-inline'>
        <p>nothing</p>

      </span>
</section>
</div><div class='py1'><section class='py2 clearfix'>
  <h2 id='bar' class='mt0'>
    bar<span class='gray'></span>
  </h2>
  <p>Get an instance of <a href="klass"><code>Klass</code></a>. Will make
a <a href="klass"><code>klass instance multiword</code></a>,
like a <a href="klass"><code>klass</code></a></p>

      <h4>Returns</h4>
      <code><code><a href="#klass">Klass</a></code></code>
      :
      <span class='force-inline'>
        <p>that class</p>

      </span>
</section>
</div>
        </div>
      </div>
    </div>
  </div>
  <script src='assets/anchor.js'></script>
  <script src='assets/site.js'></script>
</body>
</html>
